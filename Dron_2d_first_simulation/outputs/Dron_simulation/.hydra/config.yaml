training:
  max_steps: 110000
  grad_agg_freq: 1
  rec_results_freq: 5000
  rec_validation_freq: ${training.rec_results_freq}
  rec_inference_freq: ${training.rec_results_freq}
  rec_monitor_freq: ${training.rec_results_freq}
  rec_constraint_freq: 10000
  save_network_freq: 1000
  print_stats_freq: 100
  summary_freq: 1000
  grad_clip_max_norm: 0.5
  monitor_grad_clip: true
  ntk:
    use_ntk: false
    save_name: null
    run_freq: 1000
amp:
  enabled: false
  mode: per_order_scaler
  dtype: float16
  autocast_activation: false
  autocast_firstlayer: false
  default_max_scale_log2: 0
  custom_max_scales_log2: {}
graph:
  func_arch: false
  func_arch_allow_partial_hessian: true
stop_criterion:
  metric: null
  min_delta: null
  patience: 50000
  mode: min
  freq: 1000
  strict: false
profiler:
  profile: false
  start_step: 0
  end_step: 100
  name: nvtx
network_dir: .
initialization_network_dir: ''
save_filetypes: vtk
summary_histograms: 'off'
jit: true
jit_use_nvfuser: true
jit_arch_mode: only_activation
jit_autograd_nodes: false
cuda_graphs: true
cuda_graph_warmup: 20
find_unused_parameters: false
broadcast_buffers: false
device: ''
debug: false
run_mode: train
arch:
  fully_connected:
    arch_type: fully_connected
    input_keys:
    - x
    - 'y'
    - t
    output_keys:
    - u
    - v
    - p
    - nu_t
    detach_keys: ???
    scaling: null
    layer_size: 768
    nr_layers: 7
    skip_connections: false
    activation_fn: silu
    adaptive_activations: false
    weight_norm: true
models: ???
loss:
  _target_: modulus.sym.loss.aggregator.Sum
  weights: null
optimizer:
  _params_:
    compute_gradients: adam_compute_gradients
    apply_gradients: adam_apply_gradients
  _target_: torch.optim.Adam
  lr: 0.001
  betas:
  - 0.9
  - 0.999
  eps: 1.0e-08
  weight_decay: 0.0
  amsgrad: false
scheduler:
  _target_: custom
  _name_: tf.ExponentialLR
  decay_rate: 0.92
  decay_steps: 10000
batch_size:
  inlet: 600
  outlet: 600
  walls: 512
  drone: 1024
  buildings: 512
  obstacles: 512
  rotors: 256
  interior: 6000
custom: ???
